Список вопросов к видео https://youtu.be/hW_7hodGxVU?si=tCEVs00xGt2q61eW (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):

В ответе подробно всё опишите и обязательно нужно указывать тайм код в видео где я это сказал, по желанию дополнительно прикладываем скриншот из видео.

1) Как понять, что домашка пришла?
в чате HomeWork - @nick - прими пул
2) Как принять домашку?
через клиент GitHubClient - fetch origin
3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
видим что произошло, какие изменения были внесены. 
3.1) Где брать ссылку на коммит? куда её отправлять? 
ссылку на коммит берем из адресной строки в браузере, отправляем ее в чать Homework
4) Что такое файл лога? 
в нем заполняйется тезисно резюме каждого урока
4.1) Когда нужно его пушить?
после каждого урока
5) Что такое интерпритатор? 
программ которая читает и запускает наш код
6) Где можно выбрать интерпритатор?
в клиенте VSCode в поисковой строке
7) Что такое модуль? 
В VsCode при исполнении ячейки 
8) Как создать и отправить коммит?
зайти в кошку, заполнить комменатрий, нажать Commit to main --> PushOrigin
9) Как посмотреть что коммит точно отправлен и находится в github?
пкм на коммит --> открыть в GitHub
10) Какая команда показывает что код не прошёл проверки на ошибки?
pre-commit run --all-files 
10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
pylint, docformatter, Add trailing commas, codespell, nbqa-black, pyupgrade, isort, nbqa-blacken-docs, nbqa-pyupgrade, nbqa-isort, trim trailing whitespace, fix end of files, check yaml, debug statements (python), python tests naming, fix requirements.txt, black, nbqa-flake8, flake8, nbqa-mypy, mypy, nbqa-pylint, docformatter, nbqa-pydocstyle
11) Как узнать какой именно линтер не прошёл проверку?
в окне Error строка с Failed
12) Линтер Pylint видит markdown?
не видит
13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
линтер не видит маркдаун ячейки, поэтому иногда их число может отличаться
14) Где посмотреть номер ячейки в vscode?
нижний правый угол Cell
15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
Гит воспринимает ipynb формат как JSON
16) Где посмотреть в какой ячейке ошибка?
в терминале, рядом с названием файла вызвавшим ошибку
17) Как запустить терминал?
Terminal-->New Terminal
18) Что такое линтер?
программа которая проверяет на правильность оформления кода
19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
https://pylint.pycqa.org
20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
когда закрыли ошибки по Pylint
21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
о чем вообще будут все следующие ячейки
21) С какой  git команды начинается утро программиcта?
Fetch Origin
22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
навести мышкой на текущий репозиторий, пкм--> Open in VsCode
23) Что такое stash?  
  При совместной работе над файлом, во избежание конфликтов, при принятии изменений с гита, 
та работа что была проделана нами, сохраняется локально на нашем компьютере. После чего мы решаем какую версию оставить, свою или только что принятую.
23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531):
git stash save "NAME_STASH"

  Кнопка в vs code:
Source Control - Stash
23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:
В кошке нажать Stashed Changes -- Restore
      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:

23.3) Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить.
23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
git stash list
23.5) Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
git stash drop
git stash clear
23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.
Есть локальные изменения, но перед пулом нужно синхронизировать репозиторий.
Переключиться на другую ветку для срочного исправления
24) Где посмотреть что есть конфликт в файлах? 
можно посмотреть в кошке после принятия обновлений
24.1) Когда он появляется?
когда гит не понимает какие изменения нужно сохранить - локальные или те, что пришли с интернета
25) Как решить конфликт в файлах?
открыть конфликтующий файл в вскоде, нажать accept current changes
26) Напишиие правильное утверждение
Зелёное то что пришло с гитхаба и синее локальные изменения
27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? 
можно
27.1) Что может произойти когда stash восстановите после принятия pull?
возникнет конфликт, который потом надо решить - оставить одну из версий файла или оставить оба изменения
28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
3 - Accept Current Change, Accept Incoming Change, Accept Both Changes
29) Что делает кнопка complete merge?
Закрывает конфликт версий файла, позволяя сделать комит
30) В какой чат нужно писать если остались вопросы?
31) Что такое FORK? Зачем его делают? 
это копирование репозитория к себе в личный акаунт гитхаба для работы над проектом 
32) Как скачать форкнутый репозиторий на локальный компьютер?
в кошке --add -- ищем нужный репозиторий
33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
90%
34) Как создать файл в vs code?
file--new file или через +
35) Файл лога нужно заполнять в конце каждого урока?
да
==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
jupyter nbconvert --to script имя_файла.ipynb
подсказка https://t.me/c/1937296927/1/26527 
2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?
это инструмент, который автоматизирует установку, обновление, управление и удаление программного обеспечения (или библиотек) и их зависимостей. Лучше использовать conda потому что автоматически управляет системными зависимостями
3) Почему расширение py лучше чем ipynb?
Легче интегрируется в Git.
4) Что такое pep8? 
"Python Enhancement Proposal 8", официальное руководство по стилю написания кода на Python.
подсказка:https://peps.python.org/pep-0008/
4.1) линтеры проверяют на соблюдение pep8?
не только, могут проверять еще на ошибки в коде
4.2) Какая нотация используется для создания переменных? 
змеиный регистр (snake_case) 
верблюжий регистр(camelCase)
Схема Pascal (PascalCase)
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
да
4.4) Зачем и где мы используем андерскор _
в теле цикла, когда переменная _ нам больше нигде не пригодится 
4.5) По PEP8 допустима переменная в одну букву?
допустима в теле цикла 
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676


