Список вопросов к видео https://youtu.be/hW_7hodGxVU?si=tCEVs00xGt2q61eW (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):

В ответе подробно всё опишите и обязательно нужно указывать тайм код в видео где я это сказал, по желанию дополнительно прикладываем скриншот из видео.

1) Как понять, что домашка пришла?

Заходим в телеграм, ищем свой тег с текстом прими пул

2) Как принять домашку?

Делаем git pull

3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?

Кнопка history нужна для просмотра истории изменений в репозитории (история коммитов, пуллов) 

При нажатии правой кнопки мыши появится меню, с помощью одного варианта которого можно посмотреть коммит на гитхабе (остально не помню, посмотреть не могу так как кошка слетела)

3.1) Где брать ссылку на коммит? куда её отправлять? 

Через историю коммитов а кошке (или просто на гитхабе) открываем свой коммит и копируем ссылку из поисковой строки браузера. Отправляем в чат homework  с текстом коммит отдал

Открываем свой коммит 

4) Что такое файл лога? 

Конспект уроков

4.1) Когда нужно его пушить?

После урока

5) Что такое интерпретатор? 

Это определенная реализация Python, разные интерпретаторы по своему адаптиорваны под разные задачи

6) Где можно выбрать интерпретатор?

Через палитру команд в VSCode (Command + Shift + P на маке)
Вводим команду Python: select interpreter
Выбираем нужный

7) Что такое модуль? 

Это файл на языке Python, который содержит определенные функции, типы объектов и тд. Пример numpy, scipy pandas и тд.

8) Как создать и отправить коммит?

git add .(добавляем все измененные файлы, также можно выбрать только определенные)

git commit -m 'название коммита'

git push 

9) Как посмотреть что коммит точно отправлен и находится в github?

Можно посмотреть его наличие в github 

10) Какая команда показывает что код не прошёл проверки на ошибки? 

pre-commit run --all-files

10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.

pylint - самый строгий основной линтер, проверяет код на на соответствие pep8, логические, синтаксические ошибки

flake8 - простой линтер, проверяет на соответствие pep8

mypy - проверяет статическую типизацию данных, аннотацию типов данных переменных

Black - автоматически форматирует код под стандарты pep8

Pycodestyle — для проверки чистого стиля по PEP 8 без дополнительных проверок.

11) Как узнать какой именно линтер не прошёл проверку?

в сообщении об ошибке после выполнения pre-commit run --all-files перед текстом ошибки, помимо информации о местонахождении недочета, будет указано имя линтера, который эту ошибку обнаружил.
12) Линтер Pylint видит markdown?

Нет, он его игнорирует

13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?

В моем случае номер ячейки в терминале и в VSCode отличается при наличии markdown ячеек, также если закусывается неочищенный кэш.

14) Где посмотреть номер ячейки в vscode?

Control+G

15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?

Отправляется в файле JSON, в нем хранятся результаты вывода и метаданные, в виде структурированных данных, которые Git хранит как обычный текстовый файл.

16) Где посмотреть в какой ячейке ошибка?

В сообщении об ошибке

17) Как запустить терминал?

Создать терминал можно через кнопку Создать терминал в верхнем меню VSCode во вкладке терминал

18) Что такое линтер?

Софт проверяющий код на недочеты - логические, синтаксические, работает по pep8

19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?

в документацию pylint, ссылку можно найти в hw.txt

20) Секция pydocstyle в большинстве случае автоматически закрывается после исправления ошибок в каком линтере?

pylint

21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?

"""Описание модуля""" - синтаксис описания модуля, которое отражает его содержимое

21) С какой  git команды начинается утро программиста?

git pull

22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?

Не пользуюсь кошкой

23) Что такое stash?  
  Общее объяснение концепции.

  Конфликт версий изменений в репозитории, возникающий при наличии нескольких таковых версий

23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531): 

  git stash apply

  Кнопка в vs code:
  got no idea

23.2) Как восстановить стэш (подсказка: https://t.me/c/1937296927/3602/25747)?:
      restore changes


      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:

      git stash pop


23.3) Различие между стэшем и коммитом.  

  Stash это временное сохранение изменений, оно нужно, чтобы можно было хранить изменения без создания постоянных изменений.
commit сохраняет изменения навсегда, больше подходит для сохранения окончательных версий проекта. Также коммит является модулем самой ветки, тогда как stash им не является.

  Когда лучше сохранить изменения в стэше, а когда коммитить.

  в стэше храним промежуточные изменения, а в коммите финальные

23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):

  git stash list

23.5) Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git stash drop stash{номер стеша который можно посмотреть использовав команду git stash list} - удалит конкретный стеш

  git stash clear - удалит все стеши

  git команда (подсказка: https://t.me/c/1937296927/3602/19531):

23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.

  Ситуации в которых не обойтись без Стеша:

Нам нужно совершить кардинальное изменение в проекте, в котором мы не уверены, так что нам, перед применением изменений стоит создать stash - это позволит нам откатиться на версию до изменений

При наличии нескольких контрибьюторов, во имя избежания конфликтов их изменений каждый может воспользоваться stashем после внесения правок другим, чтобы иметь возможность отменить/применить эти изменения

24) Где посмотреть что есть конфликт в файлах? 

git status

24.1) Когда он появляется?

при наличии разных вариантов изменений (например приналичии нескольких контрибьторов которые работают над одним файлом.)

25) Как решить конфликт в файлах?

Выбрать подходящие изменения 


26) Напишиие правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения 

Зелёное то что пришло с гитхаба и синее локальные изменения - правильно

27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? 

Да, так и нужно делать

git stash 

git pull

git stash pop

27.1) Что может произойти когда stash восстановите после принятия pull?

 Конфликты в измененных пуллом файлов

28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.

3 способа

accept incoming changes - принять изменения пришедшие изменения

accept current changes - принять локальные изменения

accept both changes - принять оба изменения


29) Что делает кнопка complete merge?

не знаю 

30) В какой чат нужно писать если остались вопросы?

HELP ME

31) Что такое FORK? Зачем его делают? 

fork позволяет скопировать репозиторий себе, чтобы можно было внести изменения и потом отправить пул реквест 

32) Как скачать форкнутый репозиторий на локальный компьютер?

git clone ссылка

33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?

13%, решили другие студенты

34) Как создать файл в vs code?

кнопка создать файл

35) Файл лога нужно заполнять в конце каждого урока?

Да
==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
подсказка https://t.me/c/1937296927/1/26527 
2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?

Софт позволяющий автоматизировать взаимодействие с нужными файлами. Я не пользуюсь ни pip ни conda активно.

3) Почему расширение py лучше чем ipynb?

Не знаю

4) Что такое pep8? 

Сводка правил для написание чистого кода на python
подсказка:https://peps.python.org/pep-0008/
4.1) линтеры проверяют на соблюдение pep8?

Да, они на этом основаны

4.2) Какая нотация используется для создания переменных? 

snake_case


ответ на 85-95 страницы https://t.me/c/1937296927/1/16676

4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?

Нет

4.4) Зачем и где мы используем андерскор _ 

чтобы обозначить за переменную итерацию цикла 
4.5) По PEP8 допустима переменная в одну букву?

нет
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676


