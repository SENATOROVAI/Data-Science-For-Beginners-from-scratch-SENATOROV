"""Quiz.

quiz1 (работа с домашкой), quiz2(работа в VSCode).
"""

# "quiz1"
#
# Список вопросов к видео https://t.me/c/1937296927/765/29780 (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):
#
# > [Q] 1) Как понять, что домашка пришла?
#
# в Tg группе HomeWork появится сообщение: "@username прими пул"
#
# > [Q] 2) Как принять домашку?
#
# 1. в Git `git fetch`
# 1.1 смотрим файлы, что пришли. Например через History
# 2. заполнить нужные файлы (например lesson1.ipynb)
# 3. Git коммит файлов
# 4. в Tg группе HomeWork пишем сообщение: "коммит отдал {GitHub_commit_link}"
#
# > [Q] 3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
#
# History в GitHub Desktop показывает список коммитов
#
# Нажал правой клавишей мыши на коммит - можно сделать Git операции с коммитом:
# - Amend commit
# - Reset to commit
# - Checkout commit
# - Reorder commit
# - Create branch from commit
# - Create tag
# - Cherry-pick commit
# - Copy SHA
# - View on GitHub
#
# > [Q] 3.1) Где брать ссылку на коммит? куда её отправлять?
#
# меню правой кнопки мыши на коммите -> View on GitHub
# Отправлять в Tg в сообщение приема домашки
#
# > [Q] 4) Что такое файл лога?
#
# Файл лога - log.ipynb с заметками про урок
#
# > [Q] 4.1) Когда нужно его пушить?
#
# пушим в коммите с домашкой
#
# > [Q] 5) Что такое интерпритатор?
#
# Интерпретатор - 1 программа, которая выполняет 2 код нашей программы, причем ДО выполнения программа 2 не компилируется
#
# Компилятор отличается тем, что ДО выполнения нашей программы 2 компилирует её в машинный код. И исполняется потом машинный код
#
# в видео используем Python интерпретатор
#
# > [Q] 6) Где можно выбрать интерпритатор?
#
# в IDE при запуске программы, например ipynb
#
# > [Q] 7) Что такое модуль?
#
# Файл .py, .ipynb
#
# > [Q] 8) Как создать и отправить коммит?
#
# по списку файлов в Git IDE (GitHub Desktop) отправить коммит
#
# > [Q] 9) Как посмотреть что коммит точно отправлен и находится в github?
#
# 1) коммит виден в Git history
#
# 2) виден на сайте
#
# > [Q] 10) Какая команда показывает что код не прошёл проверки на ошибки?
#
# `pre-commit run --all-files`
#
# > [Q] 10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
#
# Используется пакет `pre-commit`
#
# линтеры:
#
# - pylint - проверка кода, соответствие PEP 8 https://peps.python.org/pep-0008/
# - pydocstyle - проверка кода, статический анализ поддержки Python docstrings PEP 257 https://peps.python.org/pep-0257/
# - flake8 - проверка кода на Style Guide
# - mypy - проверка кода на соответствие типов PEP 484 https://peps.python.org/pep-0484/
#
# > [Q] 11) Как узнать какой именно линтер не прошёл проверку?
#
# при проверке будет статус = Failed
#
# > [Q] 12) Линтер Pylint видит markdown?
#
# Нет, глючит с номером ячейки
#
# > [Q] 13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
#
# если есть ячейки с markdown
#
# > [Q] 14) Где посмотреть номер ячейки в vscode?
#
# слева от ячейки
#
# > [Q] 15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
#
# в GitHub файл ipynb идет в формате JSON
# JSON - формат хранения файлов Jupiter notebook https://ipython.org/ipython-doc/3/notebook/nbformat.html
#
# > [Q] 16) Где посмотреть в какой ячейке ошибка?
#
# в ответе линтера
#
# > [Q] 17) Как запустить терминал?
#
# из меню IDE
# но вообще можно любой терминал - Far, PowerShell
#
# > [Q] 18) Что такое линтер?
#
# проверка кода на соответствие стандартам оформления и документирования
#
# > [Q] 19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
#
# http://pylint.pycqa.org
#
# > [Q] 20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
#
# pylint
#
# > [Q] 21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
#
# Описание информации в модуле
# Да
#
# > [Q] 21) С какой  git команды начинается утро программиста?
#
# `git pull`
#
# > [Q] 22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
#
# Current repository -> Open in VS Code
#
# > [Q] 23) Что такое stash? Общее объяснение концепции.
#
# Это локальные изменения которые ты помещаешь в локальное хранилище
#
# > [Q] 23.1) Как сохранить стэш?
# >   git командa(подсказка: https://t.me/c/1937296927/3602/19531):
#
# `git stash`
#
# > [Q] 23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:
# >   git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:
#
# `git stash apply`
#
# > [Q] 23.3) Различие между стэшем и коммитом.
# >   Когда лучше сохранить изменения в стэше, а когда коммитить.
#
# stash - есть входящие изменения из Git, что конфликтуют с моими изменениями. Я могу сохранить свои изменения, взять апдейт, исправить конфликт и потом закоммитить свои изменения
# просто commit - нет входящие изменения из Git, что конфликтуют с моими изменениями
#
# > [Q] 23.4) Как просмотреть список сохраненных стэшей?
# >   git команда (подсказка: https://t.me/c/1937296927/3602/19531):
#
# `git stash list`
#
# > [Q] 23.5) Как удалить стэш?
# >   Команды для удаления отдельных стэшей или всех сразу.
# >   git команда (подсказка: https://t.me/c/1937296927/3602/19531):
#
# `git stash drop stash@{n}`
# `git stash clear`
#
# > [Q] 23.6) Практические примеры использования стэша.
# >   Краткие сценарии, где стэш помогает.
#
# Пример 1. Ты хочешь push, а внесли изменения и есть конфликт. Надо учесть свои изменения
#
# Пример 2. Отложенный коммит, который надо внести потом. По сути все stash - отложенные коммиты
#
# > [Q] 24) Где посмотреть что есть конфликт в файлах?
#
# `git log --merge`
# или проще из IDE
#
# > [Q] 24.1) Когда он появляется?
#
# если локальные изменения конфликтуют с полученными из репо
#
# > [Q] 25) Как решить конфликт в файлах?
#
# в IDE кнопками 'Accept X changes' или руками
#
# > [Q] 26) Напишите правильное утверждение
# > -Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения
#
# Зелёное то что пришло с гитхаба и синее локальные изменения
# ![image.png](attachment:image.png)
#
# > [Q] 27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения?
#
# Да
# Git спрячет изменения в stash
#
# > [Q] 27.1) Что может произойти когда stash восстановите после принятия pull?
#
# будет merge и возможно конфликт
#
# > [Q] 28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
#
# 3 способа
#     1. Кнопки "Accept {сторона} changes"
#     2. руками
#     3. Merge editor
#
# > [Q] 29) Что делает кнопка complete merge?
#
# Говорит Git что мы исправили конфликт
#
# > [Q] 30) В какой чат нужно писать если остались вопросы?
#
# Tg HELP ME
#
# > [Q] 31) Что такое FORK? Зачем его делают?
#
# Fork - копия оригинального репозитория.
#
# Позволяет менять код как хочешь и это не повлияет на оригинал
#
# Она связана с оригиналом и можно потом её синхронизировать с оригиналом
#
# Можно сделать pull request чтоб твои изменения внеслись в оригинал
#
# > [Q] 32) Как скачать форкнутый репозиторий на локальный компьютер?
#
# `git clone` или через IDE
#
# > [Q] 33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
#
# Наверное речь про ошибки оформления кода.
# С большой вероятностью они решены участниками community в чате HELP ME
#
# > [Q] 34) Как создать файл в vs code?
#
# меню 'New file'
#
# > [Q] 35) Файл лога нужно заполнять в конце каждого урока?
#
# Да
#
# > ==================
# >
# > Дополнительные вопросы:
# > [Q] 1) Какая команда конвертирует файл в py из ipynb?
# > подсказка https://t.me/c/1937296927/1/26527
#
# `jupyter nbconvert --to python <YourNotebook>.ipynb`
# или из меню IDE
#
# > [Q] 2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?
#
# программа что устанавливает пакеты и ведет их реестр
#
# Пользуюсь pip
#
# По функциям лучше conda
#
# > [Q] 3) Почему расширение py лучше чем ipynb?
#
# точно гарантирует результат.
# При работе в ipynb может быть другой результат когда ячейки в разной последовательности вызывались
#
# > [Q] 4) Что такое pep8?
# > подсказка:https://peps.python.org/pep-0008/
#
# Набор правил стиля оформления языка
#
# > [Q] 4.1) линтеры проверяют на соблюдение pep8?
#
# Да
#
# > [Q] 4.2) Какая нотация используется для создания переменных?
# > ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
#
# PEP 8, нижний змеиный регистр при именовании переменных
#
# > [Q] 4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
#
# Да
#
# > [Q] 4.4) Зачем и где мы используем андерскор _
#
# нижний змеиный регистр при именовании переменных. Чтоб разделить логические понятия
#
# > [Q] 4.5) По PEP8 допустима переменная в одну букву?
# > ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
#
# Допустимо

# "quiz2"
#
# > Список вопросов к видео https://t.me/c/1937296927/765/29781 (НАСТРОЙКА VSCODE, перенос строк, линтеры, работа с ячейками):
#
# > [Q] 1. Как включить автосохранение данных в VSCODE?
#
# File -> Auto Save
#
# > [Q] 2. Как настроить перенос строки?
#
# File -> Preferences -> Settings. wrap = wordWrapColumn
#
# > [Q] 3. Сколько символов по pep8 разрешено на строке?
#
# 79
#
# > [Q] 4. Какие способы переноса строк показаны в видео:
#
# 4.4 4.6
#
# > 4.1 Строки с использованием обратного слэша (\)
# >
# > string_continued = "This is a long string that we want to " \
# >                    "split across multiple lines."
# > print(string_continued)
# >
# > 4.2 Тройные кавычки (''' или """)
# >
# > multi_line_string = """This is a string that spans
# > multiple lines. You can write freely
# > and it will keep the line breaks."""
# > print(multi_line_string)
# >
# > 4.3 Создание списка строк и объединение с помощью join
# >
# > strings = [
# >     "This is the first line.",
# >     "This is the second line.",
# >     "This is the third line."
# > ]
# > result = "\n".join(strings)  # Используем перенос строк '\n'
# > print(result)
# >
# > 4.4 Использование круглых скобок для продолжения строки
# > long_string = (
# >     "This is a very long string that I would like to "
# >     "continue on the next line."
# > )
# > print(long_string)
# >
# > 4.5 Форматированные строки (f-строки) с использованием скобок
# > letter_a = 5
# > letter_b = 6
# > product_ab = letter_a * letter_b
# >
# > message = (
# >     f"when {letter_a} is multiplied by {letter_b}, "
# >     f"the result is {product_ab}"
# > )
# > print(message)
# >
# > 4.6 Сложение строк с помощью +
# >
# > string_part1 = "This is the first part, "
# > string_part2 = "and this is the second part."
# > full_string = string_part1 + string_part2
# > print(full_string)
#
# > [Q] 5. Проверка на ошибки c помощью кнопки problems, где она находится?
#
# в нижней панели VSCode
#
# > [Q] 6. Где в vscode находится клиент гита? как в нём отправить коммит? как принять домашку?
#
# на левой панели VSCode
# из меню commit
#
# принять домашку в контексте урока = pull
#
# > [Q] 7. Что такое GIT? он локальный? В нём можно посмотреть историю изменений файлов и вернуться к любому коммиту?
#
# Git это локальный клиент, он хранит локально коммиты и синхронизирует их с Git сервером
#
# Да, можно посмотреть историю изменений
#
# > [Q] 8. Как вставить картинку в маркдаун?
#
# Ctrl+V или через tag img
#
# ![image-2.png](attachment:image-2.png)
#
# <img src="https://github.com/primer/brand/assets/19292210/1393dbe7-c62d-4fcd-aa52-58f10e195110" width=240 height=240 />
#
# > [Q] 9. Где посмотреть длину строки в vs code?
#
# на панели в редакторе
#
# > [Q] 10. Как поменять тип ячейки с питона на маркдаун?
#
# в ячейке справа внизу мышкой меняем тип
#
# > [Q] 11. Как запустить сразу все ячейки в юпитере?
#
# кнопка Run All
#
# > [Q] 12. Как изменить размер картинки в юпитере? Нужно для этого знать HTML?
#
# через HTML tag img
#
# Да надо знать параметры HTML
#
# > [Q] 13. Какой хоткей чтобы запустить ячейку с смещением на следующую?
#
# Shift + Enter
#
# > [Q] 14. Как включить отображение номеров строк в юпитере(Cell line numbers)?
#
# меню Show cell line numbers
#
# > [Q] 15. Что такое "Go To" чем это полезно? Как перейти сразу на ошибочную ячейку?
#
# переходишь на нужную строку
#
# в редакторе кнопка Go to
#
# > [Q] 16. Как очистить вывод ячеек которые уже запущены?
#
# в редакторе кнопка Clear all outputs
#
# > [Q] 17. Как работать одновременно в нескольких файлах в VSCODE? Что такое SPLIT?
#
# в редакторе кнопка Split
#
# > [Q] 18. Каким сочетанием убирается левый сайдбар?
#
# Ctrl + B
#
# > [Q] 19. Кнопка два листочка это наши локальные файлы?
#
# Да
#
# > [Q] 20. Какая ошибка появилась в трассировке при запуске всех ячеек DICT или LIST?
#
# Dict
#
# > [Q] 21. Вы ознакомились с https://t.me/c/1937296927/832/19307? и ttps://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet?
#
# Да
#
# > [Q] 22. Что такое валидация?
#
# Проверка кода и файлов других типов в IDE
#
# > [Q] 23. Что такое трассировка ошибки?
#
# Детализация ошибки и ссылка на строку где ошибка произошла
#
# > [Q] 24. Что значит отвалился интерпритатор?
#
# Видимо имеется в виду, когда исполняющий процесс Python вылетел с ошибкой. В видео такого не было
