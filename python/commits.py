# """Соглашение о коммитах."""

# Соглашение о коммитах: https://www.conventionalcommits.org/ru/v1.0.0/
#
# 1. Опишите своими словами назначение каждого из этих типов коммитов:
# feat, fix, docs, style, refactor, test, build, ci, perf, chore.
#
# соглашение Angular: https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines
#
# ⦁ feat: (feature) Введение новой функциональности. Добавление чего-то нового для пользователей, например, новая функция, новая страница на сайте, новый endpoint в API.
#
# ⦁ fix: Исправление ошибки. Устранение багов, дефектов, некорректного поведения.
#
# ⦁ docs: (documentation) Изменения только в документации. Это могут быть исправления опечаток, добавление новых разделов, улучшение форматирования, но без изменений в самом коде.
#
# ⦁ style: (styling) Изменения, касающиеся только стиля кода. Форматирование, пробелы, отступы, точки с запятой — все, что не влияет на функциональность кода. Сюда же относятся автоматические изменения форматирования, сделанные такими инструментами, как Prettier или Black.
#
# ⦁ refactor: Рефакторинг кода. Изменение внутренней структуры кода без изменения его внешнего поведения. Это может быть улучшение читаемости, упрощение логики, изменение архитектуры, но без добавления новых функций или исправления ошибок.
#
# ⦁ test: (testing) Добавление, изменение или исправление тестов. Сюда относятся как unit-тесты, так и интеграционные, end-to-end и другие виды тестов.
#
# ⦁ build: Изменения, связанные с процессом сборки проекта. Это может быть изменение конфигурационных файлов сборки (например, Makefile, webpack.config.js), добавление новых скриптов сборки, обновление зависимостей, все, что влияет на процесс сборки, но не на сам код.
#
# ⦁ ci: (continuous integration) Изменения, связанные с непрерывной интеграцией. Это может быть настройка CI/CD pipeline, изменение конфигурационных файлов CI (например, .travis.yml, .gitlab-ci.yml), добавление новых шагов в pipeline.
#
# ⦁ perf: (performance) Изменения, направленные на улучшение производительности. Оптимизация кода для ускорения работы, уменьшения потребления памяти или других ресурсов.
#
# ⦁ chore: (chores) Рутинные задачи, не связанные непосредственно с кодом или функциональностью. Это может быть обновление зависимостей, изменение настроек инструментов, чистка мусора, все, что нужно сделать для поддержания проекта в рабочем состоянии, но не влияет на код.
#
# 2. Представьте, что вы исправили баг (-> fix) в функции, которая некорректно округляет числа. Сделайте фиктивный коммит и напишите для него сообщение в соответствии с Conventional Commits (используя тип fix).
# git commit -m 'fix: correct rounding error in calculate_price function'
#
# 3. Добавление новой функциональности -> feat:
# Допустим, вы реализовали новую функцию generateReport в проекте. Сделайте фиктивный коммит с типом feat, отражающий добавление этой функциональности
# git commit -m 'feat: add new function generateReport'
#
# 4. Модификация формата кода или стилей:
# Представьте, что вы поправили отступы и форматирование во всём проекте, не меняя логики кода. Сделайте фиктивный коммит с типом style
# git commit -m 'style: corrected indents and formatting'
#
# 5. Документация и тестирование:
# Сделайте фиктивный коммит с типом docs, добавляющий или улучшающий документацию для вашей новой функции.
# git commit -m 'docs: update documentation for function generateReport'
#
# Сделайте фиктивный коммит с типом test, добавляющий тесты для этой же функции.
# git commit -m 'test: add tests for function generateReport'

# +
"""2."""
# def calculate_price(number):
#     """
#     Неправильно округляет число, просто отбрасывая дробную часть.
#     """
#     return int(number)


def calculate_price(number: float, ndigits: int | None = None) -> float:
    """Правильно округляет число, используя встроенную функцию round()."""
    return round(number, ndigits)


# -

# """3."""
# Создала новую функцию generateReport

# """4."""
# Исправила отступы и форматирование

# """5."""
# Добавила документацию для новой функции generateReport

# """5."""
# Добавила тесты для новой функции generateReport
