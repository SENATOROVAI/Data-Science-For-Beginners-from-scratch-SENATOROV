# 1. Опишите своими словами назначение каждого из этих типов коммитов:
# feat, fix, docs, style, refactor, test, build, ci, perf, chore.
# feat - добавление новой функции
# fix - исправление бага в коде
# docs - обновление или изменение документации
# style - изменение стиля кода, не влияищее на функциональность
# refactor - изменение структуры кода, не изменяя функциональность(удаление дублирования кода, переименование переменных и т.д.)
# test - добавление, исправление или улучшение тестов
# build - изменения, связанные с системой сборки и внешними зависимостями(обновление зависимостей requirements.txt, изменение конфигурации сборки и т.д.)
# ci - изменение конфигурации CI/CD
# perf - улучшение производительности кода\программы(оптимизаци алгоритмов, оптимизация запросов к БД и т.д.)
# chore - рутинные задачи и изменения не связанные с изменением кода(обновление документации, обновление .gitignore, обновление README.md и т.д.)
#
# 2. Представьте, что вы исправили баг в функции, которая некорректно округляет числа. Сделайте фиктивный коммит и напишите для него сообщение в соответствии с Conventional Commits (используя тип fix).
# fix(round_nums): fix incorrect rounding of numbers
#
# The round_nums() function was incorrectly rounding numbers. Fixed rounding logic to work correctly.
#
# Fixes #123
#
# 3. Добавление новой функциональности:
# Допустим, вы реализовали новую функцию generateReport в проекте. Сделайте фиктивный коммит с типом feat, отражающий добавление этой функциональности
#
# feat(reports): add generateReport function for data analysis
#
# 4. Модификация формата кода или стилей:
# Представьте, что вы поправили отступы и форматирование во всём проекте, не меняя логики кода. Сделайте фиктивный коммит с типом style
#
# style: format code and fix indentation across project
#
# 5. Документация и тестирование:
#
# Сделайте фиктивный коммит с типом docs, добавляющий или улучшающий документацию для вашей новой функции.
# Сделайте фиктивный коммит с типом test, добавляющий тесты для этой же функции.
#
# docs(reports): add comprehensive documentation for generateReport function
#
# test(reports): add comprehensive tests for genarateReports function
