# %%
"""Issues."""

# %% [markdown]
# ### Общие вопросы
# 1. Что такое Issues на GitHub и для чего они используются?
#
# Ответ: это инструмент для отслеживания багов, улучшений и других вопросов, связанных с проектом. Используются для организации обсуждения и решения проблем в репозитории.
#
# 2. Чем Issues отличаются от других инструментов управления задачами?
#
# Ответ: Тесно связан с кодом. Issue можно привязать к коммиту.
#
# 3. Какие основные компоненты (поля) есть у каждого Issue?
#
# Ответ:
# - title: Информативное краткое название проблемы, должны быть включены ключевые слова для поиска, например, код ошибки.
# - description: Подробное объяснение проблемы.
# - Labels: Теги.
# - Assignees: Ответственные.
# - Milestone: Этап разработки (временной промежуток).
#
# ### Создание Issues
# 4. Как создать новое Issue в репозитории?
# - Открываем на GitHub файл, который интересен.
# - Выделяем интересующий код. Как?
# 	- Кликаем по номеру линии сверху
# 	- Удерживаем shift
# 	- Кликаем по номеру снизу
# - Нажимаем ...
# - Выбираем Copy permalink
# - Сверху выбираем Issues
# - Нажимаем кнопку New issue
#
# 5. Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
#
# Ответ:код для анализа, трассировка ошибки, скрин/видео, ожидаемый результат
#
# 6. Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
#
# Ответ:
# - bug
# - documentation
# - duplicate
# - enhancement
# - good first issue
# - help wanted
# - invalid
# - question
# - wontfix
#
# 7. Как прикрепить Assignees (ответственных) к Issue?
#
# Ответ: при создании issue справа настроить поле Assignees, нажав на шестерню
#
# ### Работа с Issues
# 8. Как использовать Labels для классификации задач?
#
# Ответ: чтобы добавить label, нажимаем на шестерню поля Labels. Далее теги можно использовать для поиска
#
# 9. Для чего нужен Milestone, и как связать его с Issue?
#
# Ответ: позволяет отслеживать проблемы по временным промежуткам
#
# 10. Как привязать Issue к пул-реквесту (Pull Request)?
#
# Ответ: в описании PR использовать ключевое слово и ссылку на issue после #
#
# 11. Как добавить комментарий к существующему Issue?
#
# Ответ: открыть Issue, в поле Comment ввести текст. Нажать Comment.
#
# ### Закрытие и завершение Issues
# 12. Как закрыть Issue вручную?
#
# Ответ:
# - Открыть нужный Issue
# - Прокрутить вниз к полю комментария
# - Нажать кнопку "Close issue" (рядом с "Comment")
#
# 13. Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
#
# Ответ:
# Да, если в коммите или PR указать ключевое слово и ссылку на issue
#
# 14. Как повторно открыть закрытое Issue, если работа ещё не завершена?
#
# Ответ:
# Открыть закрытый Issue. Нажать Reopen issue.
#
# ### Фильтрация и поиск
# 15. Как найти все открытые или закрытые Issues в репозитории?
#
# Ответ: Выбираем Issues, далее Open или Closed
#
# 16. Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
#
# Ответ: Выбираем Issues, ставим фильтры по Labels, Author и др.
#
# 17. Как сортировать Issues по приоритету, дате создания или другим параметрам?
#
# Ответ: Выбираем Issues, выбираем порядок сортировки, нажав на Newest
#
# ### Интеграции и автоматизация
# 18. Как настроить автоматические уведомления о новых или изменённых Issues?
#
# Ответ: В репозитории нажать Watch и в уведомлениях подключить issues
#
# 19. Что такое Projects в контексте GitHub, и как связать их с Issues?
#
# Ответ: Projects - инструмент для планирования работы. Связывается с Issues: 1) создаем Project 2) В Project выбираем add item
#
# 20. Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
#
# Ответ: Боты, Webhooks, сторонние сервисы (например, Jira)
#
# ### Коллаборация
# 21. Как упомянуть другого пользователя в комментарии к Issue?
#
# Ответ: использовать @
#
# 22. Как запросить дополнительные данные или уточнения у автора Issue?
#
# Ответ: написать комментарий в issue, используя @
#
# 23. Что делать, если Issue неактуально или его нужно объединить с другим?
#
# Ответ: Неактуальный issue можно закрыть. А если нужно объединить с другим, то закрываем со ссылкой на друго issue
#
# ### Практические аспекты
# 24. Как использовать шаблоны для создания Issues?
#
# Ответ: создать шаблоны в .github/ISSUE_TEMPLATE/
#
# 25. Что такое Linked Issues, и как создать связь между задачами?
#
# Ответ: это связь между issues путям комментарием со ссылкой на другой issue
#
# 26. Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
#
# Ответ:
# - Время выполнения задачи, ответа, решения
# - Количество открытых и закрытых Issues
# - Процент выполнения
# - Количество Issues по типам
#
# 27. Какие best practices рекомендуются при работе с Issues в команде?
# - Использовать метки и другие настройки issues, например, для назначения ответственных. Заполнять грамотно title и description. Можно использовать Projects как канбан-доску.
