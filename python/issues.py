# %% [markdown]
# ### Общие вопросы  
# Что такое Issues на GitHub и для чего они используются?   
# Issues используется для того, чтобы можно было предложить какие-то новые функции или задать вопрос по поводу кода проекта.  
#
# Чем Issues отличаются от других инструментов управления задачами?   
# issues привязаны к конкретному проекту/репозиторию, можно закрыть автоматически через коммит, интегрирован с гитом  
#
# Какие основные компоненты (поля) есть у каждого Issue?  
# заголовок, описание, статус задачи, назначенные на выполнение(Assignee), Метки(Labels), milestones, коммиты и обсуждение  
#
# ### Создание Issues  
# Как создать новое Issue в репозитории?  
# зайти в Issues и нажать кнопку new Issue  
#
# Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?  
# в заголовок issue стоит вносить код ошибки, трассировку из терминала 
#
# Какие теги (labels) можно добавить к Issue? Какие из них стандартные?  
# bug — указывает на баги в работе программы
# documentation — требуется улучшение или дополнение документации  
# duplicate — дубликат существующей задачи или запроса  
# enhancement — запрос на новую функциональность или улучшение  
# good first issue — задача, подходящая для новичков  
# help wanted — автор или поддерживающие проект хотят помощи в решении задачи  
# invalid — задача не является актуальной или корректной  
# question — задача или обсуждение, требующее дополнительной информации  
# wontfix — было решено, что работу над задачей продолжать не будут  
# все теги выше являются стандартными
#
# Как прикрепить Assignees (ответственных) к Issue?  
# репозиторий->issues->нужный_issue->Assignees. нажимаем assign yourself, чтобы назначить себя, Assign someone else, чтобы назначить другого
#
# ### Работа с Issues
# Как использовать Labels для классификации задач?  
#
# Для чего нужен Milestone, и как связать его с Issue?  
# Milestone - это какой-то важный релиз, вокруг которого группируется набор связанных issues и pull requests.  
#
# Как привязать Issue к пул-реквесту (Pull Request)?  
# closes #issue_number в заголовке issue
#
# Как добавить комментарий к существующему Issue?  
# репозиторий->issues->нужный_issue->leave a comment...  
#
# ### Закрытие и завершение Issues
# Как закрыть Issue вручную?  
# Открыть Issue, нажать кнопку Close Issue  
#
# Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?  
# да, closes #номер_ишьюса  
#
# Как повторно открыть закрытое Issue, если работа ещё не завершена?   
# Найти комментарий, в котором сказано, кем и когда закрыто issue. Нажать на кнопку Reopen issue  
#
# ### Фильтрация и поиск  
# Как найти все открытые или закрытые Issues в репозитории?  
# Нажать на Issues в репозитории. open - открытые issues, closed - закрыте issues  
#
# Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?  
# в Issues в поисковую строку вводим label:label_name assignee:assignee_name. Идентично и для других критериев   
#
# Как сортировать Issues по приоритету, дате создания или другим параметрам?  
# в Issues нажимаем на ...(три точки) и выбираем способ сортировки  
#
# ### Интеграции и автоматизация  
# Как настроить автоматические уведомления о новых или изменённых Issues?  
# репозиторий проекта->watch->custom->issues  
#
# Что такое Projects в контексте GitHub, и как связать их с Issues?  
# это что-то похожее на канбан-доску, интегрированную в гитхаб, привязанную к определённому репозиторию или организации. Позволяет планировать и организоввывать работу над проектом. Issues можно добавлять в этот самый project и использовать их для отслеживания выполнения задач  
#
# Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?  
# Probot - боты, которые реагируют на события в гитхабе  
# github actions - встроенный инструмент гитхаба, который позволяет автоматизировать рутинные задачи  
# webhooks - отправка http-запросов, если происходят какие-то события на гитхабе  
#
# ### Коллаборация 
# Как упомянуть другого пользователя в комментарии к Issue?  
# @username  
#
# Как запросить дополнительные данные или уточнения у автора Issue?  
# можно оставить комментарий в самом issue по данному поводу  
#
# Что делать, если Issue неактуально или его нужно объединить с другим?  
# если issue неактуально, то закрываем его. Если нужно объединить два issues, то закрываем один из них с комментарием, сообщающим о том, что данный issue дублирует другой(и оставляем ссылку на этот другой issue)  
#
# ### Практические аспекты  
# Как использовать шаблоны для создания Issues?  
# 1. создать папку ISSUE_TEMPLATE в корневой папке репозитория
# 2. создать шаблон в формате markdown или yaml
# 3. выбрать шаблон при создании issue
#
# Что такое Linked Issues, и как создать связь между задачами?  
# linked issues - это функция гитхаба, позволяющая связывать ишьюсы между собой.
# Чтобы связать ишьюсы мы в ишьюсе выбираем linked issues, где вводим номер ишьюса и тип связи между ними(relates to, blocks, is blocked by)
#
# Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?  
# Можно отслеживать время выполнения ишьюса(от открытия до закрытия), количество открытых и закрытых задач, количество комментариев к ишьюсам, назначенные ответственные и их темп работы, соотнощение открытых и закрытых задач с течением времени
#
# Какие best practices рекомендуются при работе с Issues в команде?  
# чёткие описания задач и описательные заголовки, назначение ответственных, атомарность задач, назначение ответственных(assignees) за задачи
