"""Задание по Issues."""

# Общие вопросы
#
# 1. Что такое Issues на GitHub и для чего они используются? - Issues можно использовать для объяснения работы кода, его усовершенствования и устранения багов
# 2. Чем Issues отличаются от других инструментов управления задачами? - Они интегрированы с репозиториями, то есть мы можем связывать конкретные коммиты, пулл-реквесты и ветки с определенными задачами и сразу отследить изменения
# 3. Какие основные компоненты (поля) есть у каждого Issue? - Title Description, Labels, Assignees, Status, Comments, References, Attachments, Timestamps

# Создание Issues
#
# 4. Как создать новое Issue в репозитории? - зайти на GitHub в основную ветку -> Issues -> New issue -> Выбрать тип issues или Open a blank issue -> Пишем название и описание -> Submit new issue
# 5. Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи? - В названии надо указывать что сделали и в каком файле, код ошибки, трассировку из терминала, и круглые скобки с номером; в описании указываем все сведения которые могут помочь в устранении проблемы, можно добавить список необходимых задач
# 6. Какие теги (labels) можно добавить к Issue? Какие из них стандартные? - 
# К стандартным тегам относятся: bug, enhancement, documentation, question, help wanted, invalid, wontfix, duplicate
# К дополнительным тегам относятся: priority, status, type
# 7. Как прикрепить Assignees (ответственных) к Issue? - Нажать на раздел, откроется список участников команды или проекта, которых можно выбрать 

# Работа с Issues
#
# 8. Как использовать Labels для классификации задач? - Надо выбрать, какие тэги подходят для issue, нажать на поле Labels и выбрать нужные и списка (1-2 тега). Теги могут быть как стандартными, так и пользовательскими 
# 9. Для чего нужен Milestone, и как связать его с Issue? - Milestone это дедлайн ошибки в каком месяце мы хотим ее решить, по нему можно будет находить тикеты, которые мы закрыли в определенный месяц. Чтобы связать его с Issue нажимаем на вкладку Milestone справа -> указываем дедлайн вручную или выбираем из списка
# 10. Как привязать Issue к пул-реквесту (Pull Request)? - Нужно сделать упоминание номера issue в описании пол-реквеста, для этого пишем Closes # номер issue
# 11. Как добавить комментарий к существующему Issue? - На странице issue прокрутить вниз до секции комментариев и добавить комментарий 
#

# Закрытие и завершение Issues
#
# 12. Как закрыть Issue вручную? - Issues -> открыть нужный issue -> Close issue
# 13. Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать? - Чтобы закрыть автоматически issue необходимо использовать специальные ключевые слова в сообщении коммита или описании пул-реквеста. Ключевые слова: closes, closed, fixes, fixed и номер issue после ключевых слов, например Closes #001
# 14. Как повторно открыть закрытое Issue, если работа ещё не завершена? - Issues -> Closed -> Открыть нужный issue -> Reopen issue

# Фильтрация и поиск
#
# 15. Как найти все открытые или закрытые Issues в репозитории? - Использовать фильтрацию с помощью интерфейса GitHub Open и Closed
# 16. Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям? - В строке поиска можно ввести:
# label:имя_метки - для поиска по меткам
# assignee:имя_пользователя - для поиска по пользователю 
# is:статус - для поиска по статусу
# author:имя_пользователя - для поиска по автору
# created:>0000-00-00 - для поиска по дате создания
# Можно также комбинировать фильтры
# 17. Как сортировать Issues по приоритету, дате создания или другим параметрам? - GitHub -> Issues -> Newest/Oldest/Most commented или использовать фильтрацию из вопроса 16 

# Интеграции и автоматизация
#
# 18. Как настроить автоматические уведомления о новых или изменённых Issues? - Открываем issue -> Subscribe для конкретного issue или подписаться на репозиторий Watch -> Watching 
# 19. Что такое Projects в контексте GitHub, и как связать их с Issues? - Projects это инструмент для организации и управления командными проектами. Помогает в визуализации проектов, их планировании и организации. Чтобы связать с issues надо: перейти во вкладку Projects -> New Project -> даем имя, описание и создаем -> открываем проект -> Add issues
# 20. Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)? - 
# GitHub Actions - автоматизация рабочих процессов с issues
# Webhooks - отправляет уведомления о событиях в репозитории на URL
# Боты - могут отправлять уведомления о событиях, связанных с issues
# Zapier - помогает в автоматическом режиме реагировать на события в GitHub и выполнять действия в других приложениях

# Коллаборация
#
# 21. Как упомянуть другого пользователя в комментарии к Issue? - @имя_пользователя
# 22. Как запросить дополнительные данные или уточнения у автора Issue? - оставить комментарий в самом issue и упомянуть автора 
# 23. Что делать, если Issue неактуально или его нужно объединить с другим? - либо закрыть issue и написать в комментариях почему, либо создать запрос на объединение в комментариях к issue

# Практические аспекты
#
# 24. Как использовать шаблоны для создания Issues? - создать папку .github/ISSUE_TEMPLATE в ней создать файл с расширением .md, внутри файла описать структуру шаблона. После создания нового issue в репозитории будет доступен список шаблонов 
# 25. Что такое Linked Issues, и как создать связь между задачами? - Linked Issues это способ связать различные issues в репозитории. Чтобы это сделать необходимо: открыть issue -> создать комментарий с ключевыми словами (Related to #номер_issue_для_связи) или вставить ссылку на другой issue
# 26. Какие метрики (например, время выполнения) можно отслеживать с помощью Issues? - можно отслеживать время выполнения, время обработки, количество открытых и закрытых задач, среднее время закрытия задач, активность команды, типы задач и их зависимость 
# 27. Какие best practices рекомендуются при работе с Issues в команде? - использование шаблонов для различных типов задач, использование меток и фильтрации для классификация задач, регулярные обновления, использование Linked Issues, ведение документации по процессам работы 
