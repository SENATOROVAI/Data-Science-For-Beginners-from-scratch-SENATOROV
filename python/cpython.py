"""Cpython Issues."""

# 1. Что такое CPython и чем он отличается от Python?
# CPython — это реализация языка Python, написанная на языке C; это интерпретатор, который читает и выполняет Python‑codes.
# Буквально: когда вы устанавливаете "Python" с официального сайта и запускаете python.exe, вы обычно используете CPython — то есть сам интерпретатор реализован на C
# 3. Сколько существует реализаций Python, и какая из них самая популярная?
# существует шесть реализаций Python, и самая популярная — CPython (именно её мы обычно используем)
# 4. На каком языке написан CPython?
# CPython написан на языке C; ядро интерпретатора реализовано на C, поэтому он вызывает инструкции на C для выполнения операций
# 5. (опционально) Кто создал CPython?
# название "CPython" исторически связано с официальной реализацией, первоначально развиваемой Гвидо ван Россумом и сообществом
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# Python (CPython) очень быстрый, потому что ядро написано на C и вызывает инструкции из C, то есть тяжёлая работа делается в оптимизированном C‑коде
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# ![Снимок экрана 2025-09-19 в 21.21.49.png](<attachment:Снимок экрана 2025-09-19 в 21.21.49.png>)
# 8. Что содержится в папке include в CPython?
# ![Снимок экрана 2025-09-19 в 21.22.47.png](<attachment:Снимок экрана 2025-09-19 в 21.22.47.png>)
# 9. Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# Официальный репозиторий CPython размещён на GitHub
# https://github.com/python/cpython
# 10. (опционально) Как работает интерпретатор CPython при выполнении кода?
# интерпретатор читает код и запускает его
# 11. Какая команда используется для запуска файла с помощью CPython?
# Для запуска нужно вызвать интерпретатор и передать путь к файлу:
# Открыть консоль (CMD).
# Выполнить: &lt;путь_до_interpreter&gt; &lt;путь_до_файла&gt через пробел путь до файла (например test.txt) и Enter
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
# Да, можно — интерпретатору не важно расширение файла; важен содержимое: если в файле есть валидный Python‑код (например строка print(...)), он выполнится независимо от расширения
# 13. Как указать путь к интерпретатору и файлу для выполнения кода?
# В консоли прописывается сначала путь до интерпретатора, затем пробел, затем путь до файла, который вы хотите запустить. В уроке демонстрируют копирование пути к интерпретатору и пути к файлу и вставку в консоль
# 14. Чем PyPy отличается от CPython?
# PyPy — это другая реализация Python, ориентированная на скорость; в уроке сказано, что PyPy работает примерно в 10 раз быстрее, чем CPython (в некоторых случаях) s .
# Одно из отличий: PyPy использует JIT‑компиляцию (в уроке это не раскрывается подробно, но отмечается главное — скорость)
# 15. Почему PyPy не может использоваться для всех проектов на Python?
# PyPy достаточно новый и не совместим со всеми проектами Python, поэтому его применяют выборочно для отдельных проектов
# 16. Где можно скачать PyPy?
# официальный сайт PyPy pypi.org
# 17. Как установить PyPy после скачивания?
# скачивание архива с PyPy, перемещение архива в удобное место и распаковка архива — после этого в распакованной папке будет исполняемый файл интерпретатора (на Windows — .exe)
# 18. Как запустить файл с помощью PyPy?
# Аналогично CPython: в консоли указываете путь до исполняемого файла интерпретатора PyPy, затем через пробел путь до запускаемого файла
# 19. Почему PyPy выполняет код быстрее, чем CPython?
# PyPy имеет JIT‑компилятор и оптимизирует выполняемый байткод
# Проверьте, установлен ли CPython на вашем компьютере:
#     Используйте поиск в меню "Пуск" (Windows) или терминале (Linux/Mac).
#     Введите команду python --version или python3 --version в терминале.
# Если CPython не установлен, скачайте его с официального сайта Python https://www.python.org/downloads/ и установите.
# ![Снимок экрана 2025-09-19 в 20.22.42.png](<attachment:Снимок экрана 2025-09-19 в 20.22.42.png>)
# Найдите папку, где установлен Python (например, через команду which python в терминале или свойства ярлыка).
# Откройте папку include и изучите её содержимое. Какое количество файлов на C там есть? 74 файла
# Перейдите на [GitHub-репозиторий CPython](https://github.com/python/cpython) и найдите файл README. Прочитайте информацию о проекте.
# Задание 5: Сравнение производительности CPython и PyPy
# Создайте файл performance_test.py с кодом:
#     import time
#     start_time = time.time()
#     total = 0
#     for i in range(1, 10000000):
#         total += i
#     end_time = time.time()
#
#     print("Result:", total)
#     print("Execution time:", end_time - start_time, "seconds")
# Работает гораздо быстрее PyPy чем Cpython
