"""Cpython."""

# ### 1. Что такое CPython и чем он отличается от Python?
# - Python — это язык программирования (спецификация, стандарт)
# - CPython — это программа (интерпретатор), которая выполняет код на Python
#
# ### 3. Сколько существует реализаций Python, и какая из них самая популярная?
# В видео озвучивается число 6. Популярная CPython.
#
# ### 4. На каком языке написан CPython?
# C
#
# ### 5. (опционально) Кто создал CPython?
# Гвидо ван Россум
#
# ### 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# Вызывает инструкции из C.
#
# ### 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# C:\Users\Igor\AppData\Local\Programs\Python\Python311\python.exe
#
# ### 8. Что содержится в папке include в CPython?
# Заголовочные файлы на языке C
#
# ### 9. Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# https://github.com/python/cpython
#
# ### 10. (опционально) Как работает интерпретатор CPython при выполнении кода?
# Код Python → CPython читает → Превращает в байт-код → Сохраняет в .pyc файл
#
# ### 11. Какая команда используется для запуска файла с помощью CPython?
# python путь_до_файла
# либо
# путь_до_интерпретатора_СPython путь_до_файла
#
#
# ### 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
# Да. Интерпретатор смотрит не на название файла, а на содержимое
#
# ### 13. Как указать путь к интерпретатору и файлу для выполнения кода?
# путь_до_интерпретатора путь_до_файла
#
# ### 14. Чем PyPy отличается от CPython?
# PyPy быстрее
# Не все проекты будут работать на PyPy, что работают на CPython
#
# ### 15. Почему PyPy не может использоваться для всех проектов на Python?
# Есть проблемы с совместимостью
#
# ### 16. Где можно скачать PyPy?
# https://pypy.org/
#
# ### 17. Как установить PyPy после скачивания?
# - распаковываем архив
# - запускаем exe (на маке папка bin)
#
# ### 18. Как запустить файл с помощью PyPy?
# путь_до_интерпретатора_PyPy путь_до_файла
#
# ### 19. Почему PyPy выполняет код быстрее, чем CPython?
# JIT-компиляция
#
# ## Практика
# ### Задание 1: Поиск и установка CPython
# установлен
#
# ### Задание 2: Исследование структуры CPython
# 77 файлов на С
#
# ### Задание 3: Запуск файла с помощью CPython
# Выполнено
#
# ### Задание 4: Установка и использование PyPy
# Выполнено
#
# ### Задание 5: Сравнение производительности CPython и PyPy
# Result: 49999995000000
# Execution time: 0.008118867874145508 seconds
#
# Result: 49999995000000
# Execution time: 0.5473790168762207 seconds
#
# 0.5473790168762207/0.008118867874145508 = 67.42
