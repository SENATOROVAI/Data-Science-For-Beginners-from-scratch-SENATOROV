# ### Работа с числами

"""Data types."""

# ## Типы данных в Питоне

var1: int = 25  # целое число (int)
var2: float = 2.5  # число с плавающей точкой (float)
var3: complex = 3 + 25j  # комплексное число (complex)

# экспоненциальная запись, 2 умножить на 10 в степени 3
var4: float = 2e3
print(var4)
print(type(var4))

# Арифметические операции

# сложение, вычитание, умножение, деление, возведение в степень
var_5: int = 2
var_6: int = 4
var_7: int = 3
print(var_5 + 2, var_6 - 2, var_5 * 2, var_6 / 2, var_5**3)

# +
# новая для нас операция: разделим 7 на 2, и найдем целую часть и остаток

# целая часть
print(7 // var_5)

# остаток от деления
print(7 % var_5)
# -

# Операторы сравнения

# больше, меньше, больше или равно и меньше или равно
print(4 > var_5, 4 < var_5, 4 >= var_5, 4 <= var_5)

# +
# равенство
print(var_5 == 4)

# и новый для нас оператор неравенства
print(var_7 != var_6)
# -

# Логические операции

# +
# логическое И, обе операции должны быть истинны
print(var_6 > var_5 and var_5 != var_7)

# логическое ИЛИ, хотя бы одна из операций должна быть истинна
print(var_6 < var_5 or var_5 == 2)

# логическое НЕ, перевод истинного значения в ложное и наоборот
# print(not var_6 == 4)
# -

# Перевод чисел в другую систему счисления

# +
# создадим число в десятичной системе
sample_var_1: int = 25

# переведем в двоичную (binary)
bin_sample_var_1: str = bin(sample_var_1)
print(bin_sample_var_1)

# переведем обратно в десятичную
print(int(bin_sample_var_1, 2))

# +
# создадим число в десятичной системе
sample_var_2: int = 25

# переведем в восьмеричную (octal)
oct_sample_var_2: str = oct(sample_var_2)
print(oct_sample_var_2)

# переведем обратно в десятичную
print(int(oct_sample_var_2, 8))

# +
# создадим число в десятичной системе
sample_var_3: int = 25

# переведем в шестандцатеричную (hexadecimal)
hex_sample_var_3: str = hex(sample_var_3)
print(hex_sample_var_3)

# переведем обратно в десятичную
print(int(hex_sample_var_3, 16))
# -

# ### Строковые данные

string_1: str = "это строка"
string_2: str = "это тоже строка"

multi_string: str = """Мы все учились понемногу
Чему-нибудь и как-нибудь,
Так воспитаньем, слава богу,
У нас немудрено блеснуть."""

# Длина строки

# воспользуемся функцией len()
len(multi_string)

# Объединение строк

# +
# создадим три строки
lang1: str
lang2: str
lang3: str
lang1, lang2, lang3 = "Программирование", "на", "Питоне"

# соединим с помощью + и добавим пробелы " "
lang1 + " " + lang2 + " " + lang3
# -

# Индекс символа в строке

# +
# выведем первый элемент строки multi_string
print(multi_string[0])

# теперь выведем последний элемент
print(multi_string[-1])
# -

# Срезы строк

# выберем элементы с четвертого по шестой
print(multi_string[3:6])

# +
# выведем все элементы вплоть до второго
print(multi_string[:2])

# а также все элементы, начиная с четвертого
print(multi_string[3:])
# -

# выведем буквы в слове Питон
for i in "Питон":
    print(i)

# Методы .strip() и .split()

# +
# применим метод .strip(), чтобы удалить *
print("***15 849 302*****".strip("*"))

# если ничего не указать в качестве аргумента,
# то удаляются пробелы по краям строки
print(" 15 849 302 ".strip())
# -

# # применим метод .split(), чтобы разделить строку на части
# print(multi_string.split())
