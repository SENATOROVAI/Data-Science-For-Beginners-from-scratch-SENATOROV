"""Variables."""

# ## Переменные в Питоне

# ### Создание (объявление) переменных

# можно создать переменную, присвоив ей числовое значение
number: int = 15
print(number)

# кроме того, переменной можно задать строковое (текстовое) значение
message: str = "Я программирую на Питоне"
print(message)

# в Питоне можно присвоить разные значения сразу нескольким переменным
lang_1: str
lang_2: str
lang_3: str
lang_1, lang_2, lang_3 = "Питон", "C++", "PHP"
print(lang_1, lang_2, lang_3)

# а также присвоить одно и то же значение нескольким переменным
sample_var_1: str
sample_var_2: str
sample_var_3: str
sample_var_1 = sample_var_2 = sample_var_3 = "То же самое значение"
print(sample_var_1, sample_var_2, sample_var_3)

# каждый элемент списка можно "распаковать" в переменные
my_list: list[str] = ["помидоры", "огурцы", "картофель"]
list_1: str
list_2: str
list_3: str
list_1, list_2, list_3 = my_list
print(list_1, list_2, list_3)

# ### Автоматическое определение типа данных

sample_var_4: int = 256  # в этом случае переменной x присваивается тип int
sample_var_5: float = 0.25  # y становится float (десятичной дробью)
sample_var_6: str = "Просто текст"  # z становится str (строкой)

# ### Как узнать тип переменной в Питоне

# узнаем тип переменных из предыдущего примера
print(type(sample_var_4), type(sample_var_5), type(sample_var_6))

# ### Присвоение и преобразование типа данных

# Присвоение типа данных

sample_var_7: str = str(25)  # число 25 превратится в строку
sample_var_8: int = int(25)  # число 25 останется целочисленным значением
sample_var_9: float = float(25)  # число 25 превратится в десятичную дробь

print(type(sample_var_7), type(sample_var_8), type(sample_var_9))

# Изменение типа данных

# преобразуем строку, похожую на целое число, в целое число
print(type(int("25")))

# или строку, похожую на дробь, в настоящую десятичную дробь
print(type(float("2.5")))

# преобразуем дробь в целочисленное значение
# обратите внимание, что округления в большую сторону
# не происходит
print(int(36.6))
print(type(int(36.6)))

# конечно, и целое число, и дробь можно преобразовать в строку
print(type(str(25)))
print(type(str(36.6)))

# ### Именование переменных

# Допустимые имена переменных

var_name: str = "Просто переменная"
_variable: str = "Просто переменная"
variable_: str = "Просто переменная"
my_variable: str = "Просто переменная"
My_variable_123: str = "Просто переменная"

# Имя переменной состоит из нескольких слов

# +
# можно применить так называемый верблюжий регистр, camelCase
# все слова кроме первого начинаются с заглавной буквы и пишутся слитно
camelCaseVariable: str = "Верблюжий регистр"  # noqa: N816

# нотацию Паскаль, PascalCase (аналогично)
PascalCaseVariable: str = "Нотация Паскаль"

# змеиный стиль, snake_case (с нижними подчеркиваниями)
snake_case_variable: str = "Змеиная нотация"
# -

# Недопустимые названия переменной

# +
# my-variable: str = "Так делать нельзя"
# 123variable: str = "Так делать нельзя"
# my variable: str = "Так делать нельзя"
# -

# ### Ответы на вопросы

# **Вопрос**. Как можно преобразовать список чисел таким образом, чтобы каждый элемент списка превратился в отдельную строку?

# возьмем простой список
list_: list[int] = [1, 2, 3]

# использовать только функцию str() нельзя
str(list_)

# +
# вариант 1: объявить новый список и в цикле for помещать туда значения
list_str: list[str] = []

for char in list_:
    list_str.append(str(char))

list_str
# -

# вариант 2: использовать list comprehension
result_list_1: list[str] = [str(item) for item in list_]

# вариант 3: функции map() и list()
result_list_2: list[str] = list(map(str, list_))
