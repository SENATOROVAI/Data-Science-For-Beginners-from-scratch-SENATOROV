# %%
"""Quiz github."""

# %% [markdown]
# ### 1.1. Что такое GitHub?
# — это крупнейшее хранилище Git репозиториев, а так же центр сотрудничества для миллионов разработчиков и проектов.
#
# ### 1.2. Как GitHub связан с Git?
# Git - работает локально на компьютере разработчика, позволяет хранить версии проекта.
# GitHub - облачный сервис для создания удаленных репозиториев и хранения кода в нем.
#
# Как связаны? Разработчик использует Git локально, затем загружает код на GitHub.
# Также можно и в обратном направлении клонировать репозиторий.
#
# ### 1.3. Чем отличается fork репозитория от его клонирования (clone)?
# clone - это создание копии проекта на локальном компьютере
# fork - создание копии проекта на github. При этом fork-прокект находится "в связи" с основным репозиторием.
#
# ### 1.4. Зачем нужны и как работают pull requests?
# Нужны для:
# - взаимодействия с другими разработчиками
# - предложения решений проблем, оптимизации и других тем, связанных с проектом.
#
# Используя pull requests мы можем предложить автору репозитория некое решение, которое он может принять, отклонить или попросить доработать.
#
# ### 1.5. GitHub использует ваш почтовый адрес для привязки ваших Git коммитов к вашей учётной записи?
# Да.
#
# ### 1.6 Какая команда генерирует SSH ключ для Доступа по SSH к репозиторию (Рисунок 83)
# ssh-keygen -t ed25519 или ssh-keygen -t rsa
#
# ### 2. Создайте ишьюс и запомните его номер, в https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/issues, назовите его "UPDATE README", в дескрипшене добавьте список задач (Рисунок 102)
# +
#
# ### 2.1 Если вы хотите вносить свой вклад в уже существующие проекты, в которых у нас нет прав на внесения изменений путём отправки (push) изменений, вы можете создать своё собственное ответвление, что нужно сделать чтобы создать собственное ответвление? (Рисунок 88), сделайте ответвление https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV, и вставьте сюда ссылку на ваше ответвление
#
# Ссылка на ответвление https://github.com/Gar-98/Data-Science-For-Beginners-from-scratch-SENATOROV
#
# ### 2.2 создайте ветку dev в ФОРКЕ Data-Science-For-Beginners, вставьте сюда ссылку на вашу ветку dev
# Ссылка на ветку dev https://github.com/Gar-98/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/dev
#
# ### 2.3 В README файле вашего ФОРКА, добавьте ссылку на мой телеграм канал https://t.me/RuslanSenatorov, сохраните коммит, название коммита - в тайтле название ишьюса (#номер_ишьюс), в дескрипшене - Closes #NUMBER-ISSUES номер возьмите из пункта 2
# +
#
# ### 2.4 Отправьте пул реквест из ФОРКА в основу В ВАШУ ВЕТКУ, тайтл пул реквеста скопируйте из ISSUES-TITLE, в дескрипшине пул реквеста напишите Closes #NUMBER-ISSUES вставьте номер из пункта 2
# +
#
# ### 2.5 Прокомментириуйте ваш пул реквест перед слиянием, перейдите во вкладку(Рисунок 92) и напишите "ок", потом нажимайте сабмит ревью затем не выходя из этой вкладки, в файле README , добавьте туда ссылку на https://t.me/SENATOROVAI,
# => инструкция
# +
#
# ### 2.6 Выполните Merge pull request (Рисунок 116), вставьте сюда ссылку на ваш пул реквест
# Ссылка на pull request Gar-98/Data-Science-For-Beginners-from-scratch-SENATOROV#1
#
#
# ### 2.7 Вставьте сюда ссылку на закрытые пул реквесты в репозитории, найти можно тут
# Ссылка на закрытые pull requests в репозитории https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/pulls?q=is%3Apr+is%3Aclosed
#
# ### 2.8  Как посмотреть какие файлы были в репозитории на момент определенного коммита? вставьте сюда ссылку на любой коммит, где взять ссылку?
# Ссылка на любой коммит: https://github.com/Gar-98/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/ff362ec916cb3c5c036a7ca04cea23a207b45aa2
#
# ### 2.9  как открыть запрос слияния, указывающий на другой запрос слияния и зачем это нужно? (Рисунок 117)
# как открыть запрос слияния, указывающий на другой запрос слияния и зачем это нужно?
# Если вы видите толковый запрос слияния и у вас есть идея как его улучшить или вы не уверены, что это хорошая идея, или у вас просто нет прав записи в целевую ветку, то в таком случае вы можете открыть запрос слияния, указывающий на данный запрос. При открытии запроса на слияние вверху страницы вы увидите меню для выбора целевой и исходной веток. Если нажать кнопку Edit справа, то станет доступным выбор не только исходной ветки, а ещё и форка. можно указать вашу новую ветку для слияния с другим запросом слияния или другим форком проекта
#
# ### 3 Напишите 8 пунктов, которые нужно сделать, чтобы внести вклад в чужой проект.
# - Форк репозитория
# - Клон репозитория
# - Создание ветки для разработки
# - Разработка и коммиты
# - Пуш на удаленный репозиторий
# - Открытие пул реквеста
# - Работа в рамках пул реквеста (комментарии, доработки)
# - Слияние
#
# ### 3.1 Какие практики принято соблюдать при создании Pull Request чтобы закрыть автоматический issues? Какие практики принято соблюдать при создании commit чтобы закрыть автоматический issues?
# Использование ключевых слов в описании PR или сообщении коммита. Например, Closes #number.
#
# ### 3.2 Как отклонить/закрыть пул реквест?
# <img src="https://clck.ru/3NRcwP">
#
# ### 3.3 Перед отправкой пул реквеста нужно ли создавать ишьюс?
# Не обязательно, но создание ишьюса перед пул реквестом - хорошая практика
#
# ### 3.4 В какой вкладке можно посмотреть список изменений который был в пул реквесте? (Рисунок 92)
# Files changed
#
# ### 3.5 В какой вкладке находится страница обсуждений пул реквеста? (Рисунок 94)
# Conversation
#
# ### 4 Можно ли открыть пул реквест, если вы ничего не вносили в FORK?
# Нельзя
#
# ###  4.1 Что нужно сделать чтобы открыть пул реквест?
# - Изменения в клонированном форке
# - Фиксация изменений
# - Отправка изменений в Fork на GitHub
# - Создание PR
# - Заполнение PR
# - Нажатие Create pull request
#
# Также будет хорошей практикой, привязать issue к PR
#
# ### 4.2 Что нужно сделать Если ваш Форк устарел?
# В GitHub открываем Fork и нажимаем Synk Fork
#
# ### 4.3 Что нужно сделать если в пул реквесте имеются конфликты слияния
# Изменить свою ветку так, чтобы исключить конфликты и сопровождающий не делал лишнюю работу. Существует два основных варианта это сделать. Вы можете либо перебазировать свою ветку относительно целевой ветки (обычно, относительно master ветки исходного репозитория), либо слить целевую ветку в свою.
#
# ### 5 Что нужно сделать Для добавления отрывка кода в комментарии к ишьюсу? (Рисунок 104)
# Для добавления отрывка кода следует обрамить его обратными кавычками.
#
# ### 5.1 На какую клавишу нажать клавишу чтобы выделенный текст был включён как цитата в ваш комментарий?(Рисунок 105)
# Можно цитировать только выбранную часть, предваряя её символом >
#
# ### 5.2 Как вставить картинку в ишьюс? (Рисунок 108)
# Перетаскивание картинки для загрузки и встраивания либо через img вручную.
#
#
# ### 6 Как понять что ваш форк устарел?
# При нажатии кнопки synk fork пропадает надпись "This branch is not behind the upstream"
#
# ### 6.1 Как обновить форк?
# Нажимаем synk fork и делаем update
#
# ### 7 Как добавить участников в ваш репозиторий, чтобы команда могла работать над одним репозиторием? (Рисунок 112)
# «Settings» -> «Collaborators» -> «Add people»
#
# ### 8 Какой символ нужен для упоминания кого-либо? (Рисунок 118)
# @
#
# ### 8.1 Где находится Центр уведомлений, напишите ссылку (Рисунок 121)
# https://github.com/notifications
#
# ### 9 Что такое и зачем нужен файл README
# Файл с описанием проекта. Содержимое этого файла пользователи видят сразу под папками, как только заходят в репозиторий. В нём можно указать:
# - название
# - возможности
# - инструкции (например, по установке)
# - примеры использования
# - другое
#
# ### 9.1 Что такое и зачем нужен файл CONTRIBUTING (Рисунок 122)
# Если в репозитории будет файл CONTRIBUTING с любым расширением, то GitHub будет показывать ссылку на него при создании любого запроса на слияние.
#
# Идея состоит в том, что можно указать конкретные вещи, которые должны присутсововать или отсутсвовать в новых запросах на слияние. Таким образом люди могут ознакомится с руководством, перед тем как создавать новый запрос на слияние.
#
# ### 10. Как измененить основную ветку (Рисунок 123)
# Settings -> Под заголовком Default branch можно выбрать основную ветку
#
# ### 10. 1 Как передать проект? какая кнопка? (рисунок 124)
# Settings -> Под заголовком Danger Zone нажимаем кнопку Transfer
#
# ### 10.2 Что такое файл .gitignore?
# Файл, содержащий названия файлов и папок, которые гит должен игнорировать и не версионировать.
